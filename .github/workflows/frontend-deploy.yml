name: Deploy Frontend to Hostinger

on:
  push:
    branches: [ Demo ]
    paths: [ 'Frontend/**' ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: Frontend
        run: |
          rm -rf node_modules package-lock.json
          npm install --force --legacy-peer-deps --no-audit

      - name: Build project
        working-directory: Frontend
        run: npm run build

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          source: "Frontend/dist/*"
          target: "/var/www/html"
          strip_components: 0
          overwrite: true

      - name: Configure nginx and clear cache
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          script: |
            # Clear old files and configure nginx
            rm -rf /var/www/html/*
            
            # Create nginx configuration for SPA routing
            cat > /etc/nginx/sites-available/default << 'EOF'
            server {
                listen 80 default_server;
                listen [::]:80 default_server;
                root /var/www/html;
                index index.html;
                server_name _;
                
                location / {
                    try_files $uri $uri/ /index.html;
                }
                
                location /assets/ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }
                
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }
            }
            EOF
            
            # Test and reload nginx
            sudo nginx -t && sudo systemctl reload nginx
            
            # Clear cache
            rm -rf /tmp/lscache/* 2>/dev/null || true
            rm -rf .lscache/* 2>/dev/null || true
            
            echo "Deployment completed successfully" 